@using Microsoft.AspNetCore.Identity
@using FreelanceManager.Data
@inject NavigationManager NavigationManager
@inject SignInManager<ApplicationUser> SignInManager

<nav class="nav flex-column manage-nav-menu">
    <a class="nav-link text-dark fw-bold py-2 px-3 @(IsActive("/Account/Manage/Index") ? "active" : "")" href="/Account/Manage/Index">Profile</a>
    <a class="nav-link text-dark fw-bold py-2 px-3 @(IsActive("/Account/Manage/ChangePassword") ? "active" : "")" href="/Account/Manage/ChangePassword">Change Password</a>
    @* <a class="nav-link text-dark fw-bold py-2 px-3 @(IsActive("/Account/Manage/SetPassword") ? "active" : "")" href="/Account/Manage/SetPassword">Set Password</a>
    <a class="nav-link text-dark fw-bold py-2 px-3 @(IsActive("/Account/Manage/TwoFactorAuthentication") ? "active" : "")" href="/Account/Manage/TwoFactorAuthentication">Two-Factor Authentication</a>
    <a class="nav-link text-dark fw-bold py-2 px-3 @(IsActive("/Account/Manage/ExternalLogins") ? "active" : "")" href="/Account/Manage/ExternalLogins">External Logins</a> *@
    <a class="nav-link text-dark fw-bold py-2 px-3 @(IsActive("/Account/Manage/DeletePersonalData") ? "active" : "")" href="/Account/Manage/DeletePersonalData">Delete Account</a>
</nav>

@code {
    private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }

    private bool IsActive(string href)
    {
        return NavigationManager.Uri.Contains(href, StringComparison.OrdinalIgnoreCase);
    }
}
